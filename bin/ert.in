#!/usr/bin/env python
import sys
import os
from argparse import ArgumentParser

ERT_ROOT = "${ERT_ROOT}"
ERT_LD_LIBRARY_PATH = "%s/${CMAKE_INSTALL_LIBDIR}" % ERT_ROOT
ERT_PYTHONPATH = "%s/${PYTHON_INSTALL_PREFIX}" % ERT_ROOT
ERT_SHARE_PATH = "%s/share" % ERT_ROOT


def updateEnvPath(path_var, value):
    if path_var in os.environ:
        path = "%s%s%s" % (value, os.pathsep, os.environ[path_var])
    else:
        path = value

    os.environ[path_var] = path


def ensureConfig(func):

    def runWrapper(args):
        if len(args) == 0:
            sys.exit("Must have config file argument")

        if os.path.isfile( args[0] ):
            return func( args )
        else:
            sys.exit("Config file:%s not found" % args[0])

    return runWrapper


def runExec(executable , args):
    exec_args = [ executable ] + args
    os.execvpe( executable , exec_args , os.environ )

    

@ensureConfig
def runGui( args ):
    runExec("python" , ["%s/ert_gui/gert_main.py" % ERT_PYTHONPATH] + args)

    
@ensureConfig    
def runTui( args ):
    os.environ["ERT_UI_MODE"] = "tui"
    runExec("%s/bin/ert_tui" % ERT_ROOT ,  args)

    
@ensureConfig
def runServer( args ):
    runExec("%s/bin/ert_tcp_server" % ERT_ROOT ,  args)

def runShell( args ):
    runExec("%s/bin/ertshell" % ERT_ROOT ,  args)



#################################################################
runDefault = runGui

updateEnvPath( "LD_LIBRARY_PATH" , ERT_LD_LIBRARY_PATH )
updateEnvPath( "PYTHONPATH"      , ERT_PYTHONPATH )
os.environ["ERT_SHARE_PATH"] = ERT_SHARE_PATH
os.environ["ERT_UI_MODE"] = "gui"


parser = ArgumentParser( )
mode = parser.add_mutually_exclusive_group( required = False )
mode.add_argument("--gui" , dest = "gui" , action = "store_true" , default = False)
mode.add_argument("--text" , dest = "tui" , action = "store_true" , default = False)
mode.add_argument("--shell" , dest = "shell" , action = "store_true" , default = False)
mode.add_argument("--server" , dest = "server" , action = "store_true" , default = False)

options, args = parser.parse_known_args( args = sys.argv[1:] )

if options.gui:
    runGui( args )
elif options.tui:
    runTui(args)
elif options.shell:
    runShell( args )
elif options.server:
    runServer(args)
else:
    runDefault(args)
    
